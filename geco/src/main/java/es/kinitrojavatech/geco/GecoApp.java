/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.kinitrojavatech.geco;

import java.io.File;
import java.util.List;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

import es.kinitrojavatech.geco.data.DataFile;
import es.kinitrojavatech.geco.gui.JPanelCategory;
import es.kinitrojavatech.geco.xml.Category;
import java.awt.Toolkit;

/**
 *
 * @author quique
 */
public class GecoApp extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;

	private String password;

	/**
	 * Creates new form GecoApp
	 */
	public GecoApp() {
		dataFile = new DataFile();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButtonOpen = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonNewPasswdCatetory = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelCategory = new javax.swing.JPanel();
        jTabbedPanePasswdCategories = new javax.swing.JTabbedPane();
        jPanelAccounts = new javax.swing.JPanel();
        jPanelEncFs = new javax.swing.JPanel();
        jPanelAbout = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabelFilename = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("es/kinitrojavatech/geco/Bundle"); // NOI18N
        setTitle(bundle.getString("GecoApp.title")); // NOI18N
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/es/kinitrojavatech/geco/gui/icons/logo.png")));
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        jButtonOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/kinitrojavatech/geco/gui/icons/document-open.png"))); // NOI18N
        jButtonOpen.setText(bundle.getString("GecoApp.jButtonOpen.text")); // NOI18N
        jButtonOpen.setFocusable(false);
        jButtonOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonOpen.setName("jButtonOpen"); // NOI18N
        jButtonOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonOpen);

        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/kinitrojavatech/geco/gui/icons/document-save.png"))); // NOI18N
        jButtonSave.setText(bundle.getString("GecoApp.jButtonSave.text")); // NOI18N
        jButtonSave.setFocusable(false);
        jButtonSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonSave.setName("jButtonSave"); // NOI18N
        jButtonSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonSave);

        jButtonNewPasswdCatetory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/kinitrojavatech/geco/gui/icons/folder-new.png"))); // NOI18N
        jButtonNewPasswdCatetory.setText(bundle.getString("GecoApp.jButtonNewPasswdCatetory.text")); // NOI18N
        jButtonNewPasswdCatetory.setFocusable(false);
        jButtonNewPasswdCatetory.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonNewPasswdCatetory.setName("jButtonNewPasswdCatetory"); // NOI18N
        jButtonNewPasswdCatetory.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonNewPasswdCatetory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewPasswdCatetoryActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonNewPasswdCatetory);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanelCategory.setName("jPanelCategory"); // NOI18N

        jTabbedPanePasswdCategories.setMaximumSize(null);
        jTabbedPanePasswdCategories.setMinimumSize(null);
        jTabbedPanePasswdCategories.setName("jTabbedPanePasswdCategories"); // NOI18N
        jTabbedPanePasswdCategories.setPreferredSize(null);

        javax.swing.GroupLayout jPanelCategoryLayout = new javax.swing.GroupLayout(jPanelCategory);
        jPanelCategory.setLayout(jPanelCategoryLayout);
        jPanelCategoryLayout.setHorizontalGroup(
            jPanelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 795, Short.MAX_VALUE)
            .addGroup(jPanelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelCategoryLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPanePasswdCategories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanelCategoryLayout.setVerticalGroup(
            jPanelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 381, Short.MAX_VALUE)
            .addGroup(jPanelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelCategoryLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPanePasswdCategories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab(bundle.getString("GecoApp.jPanelCategory.TabConstraints.tabTitle"), jPanelCategory); // NOI18N

        jPanelAccounts.setName("jPanelAccounts"); // NOI18N

        javax.swing.GroupLayout jPanelAccountsLayout = new javax.swing.GroupLayout(jPanelAccounts);
        jPanelAccounts.setLayout(jPanelAccountsLayout);
        jPanelAccountsLayout.setHorizontalGroup(
            jPanelAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 795, Short.MAX_VALUE)
        );
        jPanelAccountsLayout.setVerticalGroup(
            jPanelAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 381, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(bundle.getString("GecoApp.jPanelAccounts.TabConstraints.tabTitle"), jPanelAccounts); // NOI18N

        jPanelEncFs.setName("jPanelEncFs"); // NOI18N

        javax.swing.GroupLayout jPanelEncFsLayout = new javax.swing.GroupLayout(jPanelEncFs);
        jPanelEncFs.setLayout(jPanelEncFsLayout);
        jPanelEncFsLayout.setHorizontalGroup(
            jPanelEncFsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 795, Short.MAX_VALUE)
        );
        jPanelEncFsLayout.setVerticalGroup(
            jPanelEncFsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 381, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(bundle.getString("GecoApp.jPanelEncFs.TabConstraints.tabTitle"), jPanelEncFs); // NOI18N

        jPanelAbout.setName("jPanelAbout"); // NOI18N

        javax.swing.GroupLayout jPanelAboutLayout = new javax.swing.GroupLayout(jPanelAbout);
        jPanelAbout.setLayout(jPanelAboutLayout);
        jPanelAboutLayout.setHorizontalGroup(
            jPanelAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 795, Short.MAX_VALUE)
        );
        jPanelAboutLayout.setVerticalGroup(
            jPanelAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 381, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(bundle.getString("GecoApp.jPanelAbout.TabConstraints.tabTitle"), jPanelAbout); // NOI18N

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setName("jPanel1"); // NOI18N

        jLabelFilename.setText(bundle.getString("GecoApp.jLabelFilename.text")); // NOI18N
        jLabelFilename.setName("jLabelFilename"); // NOI18N
        jPanel1.add(jLabelFilename);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

	private void jTabbedPane1StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jTabbedPane1StateChanged
		switch (jTabbedPane1.getSelectedIndex()) {
		case 0:
			jButtonNewPasswdCatetory.setVisible(true);
			break;
		default:
			jButtonNewPasswdCatetory.setVisible(false);
			break;
		}
	}// GEN-LAST:event_jTabbedPane1StateChanged

	private void jButtonOpenActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonOpenActionPerformed
		final File file = openDatafile();
		if (file != null) {
			jLabelFilename.setText(file.getAbsolutePath());
			reset();
			initPanelPasswords();
			pack();
		}
	}// GEN-LAST:event_jButtonOpenActionPerformed

	private void reset() {
		jTabbedPanePasswdCategories.removeAll();
	}

	private void formWindowClosing(final java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowClosing
		switch (JOptionPane.showConfirmDialog(this, "Guardar los cambios antes de salir")) {
		case JOptionPane.YES_OPTION:
			save();
			System.exit(0);
		case JOptionPane.NO_OPTION:
			System.exit(0);
		}
	}// GEN-LAST:event_formWindowClosing

	private void jButtonNewPasswdCatetoryActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonNewPasswdCatetoryActionPerformed
		final String name = JOptionPane.showInputDialog(this, "Nombre de la nueva categoría", "Nueva Categoría",
				JOptionPane.QUESTION_MESSAGE);
		if (name != null) {
			final Category category = new Category();
			category.setTitle(name);
			dataFile.getData().getPasswords().getCategory().add(category);
			final JPanelCategory newPanel = new JPanelCategory(category);
			jTabbedPanePasswdCategories.add(category.getTitle(), newPanel);
			pack();
		}
	}// GEN-LAST:event_jButtonNewPasswdCatetoryActionPerformed

	private void jButtonSaveActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonSaveActionPerformed
		save();
	}// GEN-LAST:event_jButtonSaveActionPerformed

	private void save() {
		if (dataFile.isOpen()) {
			dataFile.save();
		} else {
			final JFileChooser chooser = new JFileChooser();
			final FileNameExtensionFilter filter = new FileNameExtensionFilter("Ficheros de datos de geco", "geco");
			chooser.setFileFilter(filter);
			final int returnVal = chooser.showOpenDialog(this);
			if (returnVal == JFileChooser.APPROVE_OPTION) {
				password = JOptionPane.showInputDialog(this, "Introduce el password", "Password",
						JOptionPane.QUESTION_MESSAGE);
				if (password != null) {
					dataFile.setPassword(password);
					dataFile.setFile(chooser.getSelectedFile());
					dataFile.save();
				}
			}
		}
		JOptionPane.showMessageDialog(this, "Los cambios han sido guardados", "Datos guardados",
				JOptionPane.INFORMATION_MESSAGE);
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(final String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting
		// code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
		 * html
		 */
		try {
			for (final javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (final ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(GecoApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (final InstantiationException ex) {
			java.util.logging.Logger.getLogger(GecoApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (final IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(GecoApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (final javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(GecoApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				final GecoApp app = new GecoApp();
				app.initComponents();
				app.pack();
				app.setVisible(true);
			}
		});
	}

	private DataFile dataFile;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton jButtonNewPasswdCatetory;
    javax.swing.JButton jButtonOpen;
    javax.swing.JButton jButtonSave;
    javax.swing.JLabel jLabelFilename;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanelAbout;
    javax.swing.JPanel jPanelAccounts;
    javax.swing.JPanel jPanelCategory;
    javax.swing.JPanel jPanelEncFs;
    javax.swing.JTabbedPane jTabbedPane1;
    javax.swing.JTabbedPane jTabbedPanePasswdCategories;
    javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

	private File openDatafile() {
		final JFileChooser chooser = new JFileChooser();
		final FileNameExtensionFilter filter = new FileNameExtensionFilter("Ficheros de datos de geco", "geco");
		chooser.setFileFilter(filter);
		final int returnVal = chooser.showOpenDialog(this);
		if (returnVal == JFileChooser.APPROVE_OPTION) {
			dataFile = new DataFile();
			password = JOptionPane.showInputDialog(this, "Introduce el password", "Password",
					JOptionPane.QUESTION_MESSAGE);
			if (password != null) {
				final File file = chooser.getSelectedFile();
				if (dataFile.open(file, password)) {
					return file;
				}
			}
		}
		return null;
	}

	private void initPanelPasswords() {
		final List<Category> categories = dataFile.getData().getPasswords().getCategory();

		for (final Category category : categories) {
			final JPanelCategory panel = new JPanelCategory(category);
			jTabbedPanePasswdCategories.add(category.getTitle(), panel);
		}
	}
}
